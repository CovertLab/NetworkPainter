package edu.stanford.covertlab.graphics.shape 
{
	import com.degrafa.core.IGraphicsFill;
	import com.degrafa.core.IGraphicsStroke;
	import com.degrafa.geometry.Path;
	import flash.geom.Rectangle;
	
	/**
	 * Draws an endoplasmic reticulum.
	 * 
	 * <p>
	 * <img src="../../../../../../src/edu/stanford/covertlab/graphics/shape/png/endoplasmicreticulum.png" />
	 * </p>
	 * 
	 * @author Jonathan Karr, jkarr@stanford.edu
	 * @affiliation Covert Lab, Department of Bioengineering, Stanford University
	 * @lastupdated 3/23/2009
	 */
	public class EndoplasmicReticulumShape extends ComplexShapeBase
	{
		
		public function EndoplasmicReticulumShape(size:Number, strokeColor:uint, fillColor:uint)
		{
			var path:Path;
			super(size, strokeColor, fillColor);
			var bounds:Rectangle = new Rectangle(0, 0, 278, 72);
			var scale:Array = [2.5, 1.5];
			
			path = new Path(
				'M 174.22416,0.9393188 '+
				'C 186.2158,-0.029712 202.78688,-1.2310322 208.71396,11.015742 '+
				'C 214.42144,22.659139 181.42177,17.734884 173.46438,18.107112 '+
				'C 167.08574,18.681562 124.21228,9.7384204 132.79712,30.957899 '+
				'C 137.18408,40.088402 226.64788,32.245468 233.45948,32.032144 '+
				'C 243.28908,31.959832 261.30532,32.281476 263.61676,45.565038 '+
				'C 265.71201,57.455287 190.74532,47.833129 187.33268,51.514177 '+
				'C 176.54438,63.061705 256.04789,60.190513 265.20559,59.828854 '+
				'C 276.59678,60.045139 278.7819,73.600291 275.85373,78.373222 '+
				'C 272.57271,82.010537 160.66617,79.044666 103.74661,80.069483 '+
				'C 95.941298,80.136483 86.509111,86.775585 91.609553,96.019451'+
				'C 95.044617,101.039 132.1817,100.03815 136.02687,99.773335 '+
				'C 143.26184,99.481076 186.22858,92.552278 186.04426,113.05064'+ 
				'C 186.0556,117.98367 166.4885,117.27308 153.50917,117.51361 '+
				'C 119.65892,118.14091 70.686762,117.58579 56.474404,117.85962 '+
				'C 36.04258,118.25642 21.925397,114.13817 21.953923,111.43879 '+
				'C 22.42526,96.21295 36.581528,97.340796 45.357486,97.994756 '+
				'C 56.363853,97.769985 77.683569,98.89477 79.427732,95.845084 '+
				'C 91.456307,65.779029 0.7246516,92.985877 1.2870778,71.386648 '+
				'C 1.246431,62.977872 28.745444,61.114246 41.351364,61.164498 '+
				'C 80.184906,61.035512 156.31382,63.166374 157.86517,58.352433 '+
				'C 160.16999,50.105968 141.14469,49.601813 134.89495,49.285808 '+
				'C 98.58843,46.884395 -18.187605,56.528197 3.2076473,32.863196 '+
				'C 9.93627,28.239899 116.00825,36.360276 115.15951,29.949006 '+
				'C 114.30124,25.836441 117.20864,19.8001 108.25476,18.663345 '+
				'C 93.171989,16.748486 53.793131,19.346905 35.453319,17.407751 '+
				'C 20.803601,15.858768 24.770092,9.0433599 27.14715,7.0640609 '+
				'C 36.129399,-0.6983089 136.89629,0.7651336 174.22416,0.9393188 '+
				'z');
			path.stroke = stroke;
			path.fill = fill;
			geometryCollection.addItem(path);
									
			translateScale(size, bounds, scale);
			
			labelOffsetY = 4.5 * bounds.height * size / Math.max(bounds.width, bounds.height) + 5;
		}
		
	}
	
}